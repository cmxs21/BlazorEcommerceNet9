@using BlazorEcommerce.Services
@inject AuthenticationStateProvider _authStateProvider // To access authentication state
@inject SharedStateService _sharedStateService // To access shared state
@inject IShoppingCartRepository _shoppingCartRepository // To access shopping cart data

<nav class="navbar navbar-expand-md navbar-dark bg-dark pb-4 pt-4">
	<div class="container-fluid">
		<a class="navbar-brand" href="">
			<img src="/images/Logo.png" alt="Bootstrap" width="30" height="24">
			YumBlazor
		</a>
		<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
				aria-controls="navbarCollapse" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>
		<div class="collapse navbar-collapse" id="navbarCollapse">
			<ul class="navbar-nav me-auto mb-2 mb-md-0">
				<li class="nav-item mx-2">
					<NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
						<span class="bi bi-house-door" aria-hidden="true"></span> Home
					</NavLink>
				</li>
				<li class="nav-item mx-2">
					<NavLink class="nav-link" href="/cart">
                        <span class="bi bi-cart3" aria-hidden="true"></span> Cart (@_sharedStateService.CartItemsCount)
					</NavLink>
				</li>
				<li class="nav-item mx-2">
					<NavLink class="nav-link" href="/order/list">
						<span class="bi bi-card-list" aria-hidden="true"></span> Order List
					</NavLink>
				</li>
			</ul>
			<ul class="d-flex navbar-nav mb-2 mb-md-0">
				<AuthorizeView>
					<Authorized>
						<li class="nav-item">
							<NavLink class="nav-link p-2" href="Account/Manage">
                                Welcome, @context.User.Identity?.Name
							</NavLink>
						</li>
						<li class="nav-item">
							<form action="Account/Logout" method="post">
								<AntiforgeryToken />
								<input type="hidden" name="ReturnUrl" value="" />
								<button type="submit" class="nav-link btn btn-success">
									<span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
								</button>
							</form>
						</li>
					</Authorized>
					<NotAuthorized>
						<li class="nav-item">
							<NavLink class="nav-link" href="Account/Register">
								<span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
							</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link btn btn-success" href="Account/Login">
								<span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
							</NavLink>
						</li>
					</NotAuthorized>
				</AuthorizeView>
			</ul>
		</div>
	</div>
</nav>

@code{
	protected override void OnInitialized()
	{
        _sharedStateService.OnChange += OnSharedHasChanged;// Subscribe to state changes
        _ = GetInitialCartCount(); // Fetch initial cart count asynchronously
	}

	private void OnSharedHasChanged()
	{
        InvokeAsync(StateHasChanged);// Ensure UI updates on the main thread
    }

	public async Task GetInitialCartCount()
	{
		var authState = await _authStateProvider.GetAuthenticationStateAsync();
		var user = authState.User;

        _sharedStateService.CartItemsCount = await _shoppingCartRepository.GetCartCountAsync(user?.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value); // Fetch initial cart count
    }

    public void Dispose()
	{
		_sharedStateService.OnChange -= OnSharedHasChanged;// Unsubscribe to prevent memory leaks
    }
}