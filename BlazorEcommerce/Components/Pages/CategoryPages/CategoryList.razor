@page "/category"
@inject ICategoryRepository _categoryRepository

@if (IsProcessing)
{
    <div class="position-absolute w-75 h-75 d-flex flex-column align-items-center bg-white justify-content-center">
        <img src="/images/loading.gif" alt="loading" />
    </div>
} 
else
{
    <div class="card shadow border-0 mt-4">
        <div class="card-header bg-black bg-gradient ml-0 py-3">
            <div class="row">
                <div class="col-12 text-center">
                    <h4 class="text-white py-2">Category List</h4>
                </div>
            </div>
        </div>
        <div class="card-body p-4">
            <div class="row pb-3">
                <div class="col-12 text-end">
                    <NavLink href="category/create" class="btn btn-lg btn-secondary" style="width:250px;"><i class="bi bi-plus-square"></i> New Category</NavLink>
                </div>
            </div>
            @if (Categories.Any())
            {
                <table class="table table-bordered table-striped">
                    <thead class="bg-black bg-gradient text-white">
                        <tr>
                            <th style="width:10%;">#</th>
                            <th style="width:70%;">Name</th>
                            <th style="width:20%;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var category in Categories)
                        {
                            <tr>
                                <td>@category.Id</td>
                                <td>@category.Name</td>
                                <td>
                                    <NavLink class="btn btn-sm btn-primary me-2" href=@($"category/update/{category.Id}")>
                                        <i class="bi bi-pencil-square"></i> Edit
                                    </NavLink>
                                    <NavLink class="btn btn-sm btn-danger"><i class="bi bi-trash3"></i> Delete</NavLink>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="alert alert-info">
                    No categories available.
                </div>
            }
        </div>
    </div>
}

@code {
    private bool IsProcessing { get; set; } = true;
    private IEnumerable<Category> Categories { get; set; } = new List<Category>();

    //This method for loading data is not recommended because it can cause performance issues because of double rendering.
    // protected override async Task OnInitializedAsync()
    // {
    //     IsProcessing = true;
    //     await LoadCategories();
    //     IsProcessing = false;
    // }

    //Better method for loading data
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadCategories();
            IsProcessing = false;
            StateHasChanged(); // Trigger a re-render to show the loaded data
        }
    }

    private async Task LoadCategories()
    {
        Categories = await _categoryRepository.GetAllAsync();
    }
}
